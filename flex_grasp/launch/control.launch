<?xml version="1.0"?>
<launch>
	<!-- Parameters to pass to the ROS node -->
	<arg name="robot_name" 							default="iiwa"/>
	<arg name="manipulator_group_name" 	default="manipulator"/>
  <arg name="ee_group_name"           default="gripper"/>
	<arg name="planning_frame" 					default="world"/> <!-- world -->
	<arg name="robot_base_frame" 				default="px150/base_link"/>

	<!-- <arg name="use_truss" 							default="true"/> -->
	<arg name="set_pid_controls"      default="true"/>
	<arg name="gains_filepath"      default="$(find flex_grasp)/config/$(arg robot_name)_pid.yaml"/>
	<rosparam if="$(arg set_pid_controls)"
		command="load"
		file="$(arg gains_filepath)"
		ns="$(arg robot_name)"/>

	<!-- The gui should only launch when all nodes are running, when experiencing issues tune this value-->
	<arg name="gui_start_delay"						default="8"/>

	<!-- debug settings -->
	<arg name="pipeline_debug"					default="false"/>
	<arg name="object_detection_debug"	default="false"/>
	<arg name="move_robot_debug"				default="false"/>
	<arg name="monitor_robot_debug"			default="false"/>
	<arg name="visualize_object_debug"	default="false"/>
	<arg name="pick_place_debug" 				default="false"/>
	<arg name="calibrate_debug" 				default="false"/>
	<arg name="transform_pose_debug"		default="false"/>
	<arg name="gazebo_interface_debug"	default="false"/>

	<include file="$(find flex_calibrate)/launch/calibrate.launch">
		<arg name="calibrate_debug" value="$(arg calibrate_debug)"/>
		<arg name="start_rviz" value="false"/>
		<arg name="start_independent" value="false"/>

		<arg name="robot_name" value="$(arg robot_name)"/>
		<arg name="manipulator_group_name" value="$(arg manipulator_group_name)"/>
		<arg name="ee_group_name" value="$(arg ee_group_name)"/>
	</include>

	<group ns="$(arg robot_name)">

		<!-- <param name="use_truss" value="$(arg use_truss)"/> -->
		<param name="planning_frame" value="$(arg planning_frame)"/>
		<param name="manipulator_group_name" value="$(arg manipulator_group_name)"/>
		<param name="ee_group_name" value="$(arg ee_group_name)"/>
		<param name="robot_base_frame" value="$(arg robot_base_frame)"/>

		<node name = "my_rqt_dashboard"
			pkg = "rqt_gui"
			type = "rqt_gui"
			respawn = "false"
			output = "screen"
			args = "--perspective-file $(find rqt_user_interface)/config/my_dashboard.perspective"
			launch-prefix="bash -c 'sleep $(arg gui_start_delay); $0 $@' "/>

		<node name="pipeline"
			pkg="flex_grasp"
			type="pipeline.py"
			output="screen">
			<param name ="debug" value="$(arg pipeline_debug)"/>
		</node>

		<node name="object_detection"
			pkg="flex_grasp"
			type="object_detection_node.py"
			output="screen">
			<param name ="debug" value="$(arg object_detection_debug)"/>
		</node>

		<node name="pick_place"
			pkg="flex_grasp"
			type="pick_place_node.py"
			output="screen">
			<param name ="debug" value="$(arg pick_place_debug)"/>
		</node>

    <node name="move_robot"
			pkg="flex_grasp"
			type="move_robot.py"
			output="screen">
    	<remap from="/attached_collision_object" to="/$(arg robot_name)/attached_collision_object"/>
    	<remap from="/collision_object" to="/$(arg robot_name)/collision_object"/>
			<param name ="debug" value="$(arg move_robot_debug)"/>
    </node>

		<node name="monitor_robot"
			pkg="flex_grasp"
			type="monitor_robot.py"
			output="screen">
			<param name ="debug" value="$(arg monitor_robot_debug)"/>
    </node>

		<node name="transform_pose"
			pkg="flex_grasp"
			type="transform_pose_node.py"
			output="screen">
			<param name ="debug" value="$(arg transform_pose_debug)"/>
		</node>

		<node name="gazebo_interface"
			pkg="flex_gazebo"
			type="gazebo_interface_node.py"
			output="screen">
			<param name ="debug" value="$(arg gazebo_interface_debug)"/>
		</node>

		<!--
		<node name="visualize_object"
			pkg="flex_grasp"
			type="visualize_object.py"
			output="screen">
			<remap from="/attached_collision_object" to="/$(arg robot_name)/attached_collision_object"/>
			<remap from="/collision_object" to="/$(arg robot_name)/collision_object"/>
			<param name ="debug" value="$(arg visualize_object_debug)"/>
		</node>
	-->
	</group>
</launch>
